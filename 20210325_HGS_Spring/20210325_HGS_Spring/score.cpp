//=============================================================================
//
// ナンバー2Dクラス [number.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "score.h"
#include "renderer.h"
#include "manager.h"
#include "game.h"
#include "evaluation_ui.h"

//=============================================================================
// マクロ定義
//=============================================================================

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
CScore * CScore::m_pScore = NULL;

//=============================================================================
// インスタンス生成
//=============================================================================
CScore * CScore::Create(void)
{
	if (m_pScore == NULL)
	{
		// インスタンス生成
		m_pScore = new CScore;

		// !nullcheck
		if (m_pScore != NULL)
		{
			// 初期化処理
			m_pScore->Init();
		}
	}

	return m_pScore;
}

//=============================================================================
// 削除
//=============================================================================
void CScore::Release(void)
{
	if (m_pScore != NULL)
	{
		m_pScore->Uninit();
		m_pScore = NULL;
	}
}

//=============================================================================
// コンストラクタ
//=============================================================================
CScore::CScore()
{
	m_score.nScore = 0;      // スコア
	m_score.nNumNice = 0;    // ナイス数
	m_score.nNumGreat = 0;   // グレート数
	m_score.nNumParfect = 0; // パーフェクト数
}

//=============================================================================
// デストラクタ
//=============================================================================
CScore::~CScore()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CScore::Init(void)
{
	m_score.nScore = 0;      // スコア
	m_score.nNumNice = 0;    // ナイス数
	m_score.nNumGreat = 0;   // グレート数
	m_score.nNumParfect = 0; // パーフェクト数

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CScore::Uninit(void)
{
	delete this;
}

//=============================================================================
// 更新処理
//=============================================================================
void CScore::Update(void)
{
}

//=============================================================================
// 描画処理
//=============================================================================
void CScore::Draw(void)
{
}

//=============================================================================
// スコア加算
//=============================================================================
void CScore::AddScore(CEvaluation::EVALUATION_TYPE type)
{
	// スコア加算
	m_score.nScore++;

	// 各値の加算
	switch (type)
	{
	case CEvaluation::EVALUATION_TYPE_NICE:
		m_score.nNumNice++;
		break;

	case CEvaluation::EVALUATION_TYPE_GREAT:
		m_score.nNumGreat++;
		break;

	case CEvaluation::EVALUATION_TYPE_PARFECT:
		m_score.nNumParfect++;
		break;
	default:
		break;
	}

	if (CGame::GetEvaluation() != NULL)
	{
		CGame::GetEvaluation()->SetEvaluation(type);
	}
}
