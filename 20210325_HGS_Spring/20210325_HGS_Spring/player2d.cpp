//=============================================================================
//
// プレイヤー2dクラス [player2d.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "player2d.h"
#include "manager.h"
#include "keyboard.h"
#include "renderer.h"
#include "input.h"
#include "joypad.h"
#include "camera.h"
#include "game.h"
#include "sound.h"
#include "collision.h"
#include "texture.h"
#include "resource_manager.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define PLAYER_SPEED					(5.0f)				// プレイヤーの移動量
#define STICK_SENSITIVITY				(50.0f)				// スティック感度
#define PLAYER_ROT_SPEED				(0.1f)				// キャラクターの回転する速度
#define PLAYER_RADIUS					(50.0f)				// 半径の大きさ

//=============================================================================
// クリエイト
//=============================================================================
CPlayer2d * CPlayer2d::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// 初期化処理
	CPlayer2d *pPlayer = new CPlayer2d;
	CTexture *pTexture = GET_TEXTURE_PTR;

	// !nullcheck
	if (pPlayer != nullptr)
	{
		// 座標
		pPlayer->SetSceneInfo(pos, size);
		pPlayer->BindTexture(pTexture->GetTexture(CTexture::TEXTURE_NUM_PLAYER_2D));

		// 初期化処理
		pPlayer->Init();
	}

	return pPlayer;
}

//=============================================================================
// コンストラクタ
//=============================================================================
CPlayer2d::CPlayer2d(PRIORITY Priority)
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CPlayer2d::~CPlayer2d()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CPlayer2d::Init(void)
{
	CCharacter2d::Init();												// 座標　角度
	SetRadius(PLAYER_RADIUS);											// 半径の設定
	SetSpeed(PLAYER_SPEED);												// 速度の設定

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CPlayer2d::Uninit(void)
{
	// 終了処理
	CCharacter2d::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CPlayer2d::Update(void)
{
	// 座標代入
	D3DXVECTOR3 pos = GetPos();	// 現在の座標取得
	SetOldPos(pos);				// 古い座標保存

	// プレイヤーの状態
	UpdateState();

	// プレイヤーの制御
	PlayerControl();

	// 親クラスの更新処理
	CCharacter2d::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CPlayer2d::Draw(void)
{
	// 描画処理
	CCharacter2d::Draw();
}

//=============================================================================
// プレイヤーの状態
//=============================================================================
void CPlayer2d::UpdateState(void)
{
}

//=============================================================================
// プレイヤーの制御
//=============================================================================
void CPlayer2d::PlayerControl()
{
	// プレイヤーの移動処理
	Move();
}

//=============================================================================
// プレイヤー移動処理
//=============================================================================
void CPlayer2d::Move(void)
{
	// ローカル変数
	CInputKeyboard *pKeyboard = CManager::GetKeyboard();					// キーボード更新
	DIJOYSTATE js = CManager::GetJoypad()->GetStick();						// ジョイパッドの取得
	float fSpeed = GetSpeed();												// スピード
	if (CManager::GetJoypad()->GetJoyStickTrigger(0))
	{
		CManager::GetJoypad()->SetVibration(0);
	}
	//入力が存在する
	if ((js.lX != 0.0f || js.lY != 0.0f))
	{
		float fAngle = atan2f((float)js.lX, (float)js.lY);	// コントローラの角度

	// 移動量設定
		GetPos().x += sinf(fAngle)* fSpeed;
		GetPos().y += cosf(fAngle)* fSpeed;
	}
}